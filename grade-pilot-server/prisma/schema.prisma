generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
  engineType    = "library"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum StudyLevel {
  UNDERGRADUATE
  POSTGRADUATE
}

enum DegreeClassification {
  FIRST_CLASS
  UPPER_SECOND_CLASS
  LOWER_SECOND_CLASS
  THIRD_CLASS
  PASS
}

model User {
  id                  String   @id @default(cuid())
  email               String   @unique
  name                String
  password            String
  degree              Degree? // A user can have one degree
  onboardingCompleted Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Degree {
  id                   String                @id @default(cuid())
  title                String
  studyLevel           StudyLevel // UNDERGRADUATE or POSTGRADUATE
  degreeType           String // "Bachelors", "Masters", "Doctorate" or "Major"
  totalLengthYears     Int
  currentYear          Int
  targetClassification DegreeClassification?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  academicYears AcademicYear[]
}

model AcademicYear {
  id               String @id @default(cuid())
  yearNumber       Int
  totalCredits     Int?
  weightingPercent Int?
  targetMark       Int?

  degree   Degree @relation(fields: [degreeId], references: [id], onDelete: Cascade)
  degreeId String

  modules Module[]
}

model Module {
  id         String  @id @default(cuid())
  name       String
  moduleCode String?

  targetMark Int?
  credits    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  academicYear   AcademicYear @relation(fields: [academicYearId], references: [id], onDelete: Cascade)
  academicYearId String

  assignments Assignment[]
}

model Assignment {
  id               String @id @default(cuid())
  title            String
  markPercent      Int?
  weightingPercent Int

  module   Module @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  moduleId String
}
